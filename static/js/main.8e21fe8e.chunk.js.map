{"version":3,"sources":["components/Titile.js","components/Form.js","components/Weather.js","App.js","serviceWorker.js","index.js"],"names":["Title","react_default","a","createElement","style","lineHeight","verticalAlign","display","color","React","Component","Form","clear","console","log","$","val","className","onSubmit","this","props","getWeather","marginLeft","type","name","width","margin","marginTop","onClick","Weather","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","sunrise","onLoad","Sunset","city","country","textAlign","temperature","description","humidity","coord","lat","lon","sunset","pressure","visibility","error","API_KEY","App","state","undefined","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","api_call","data","wrap","_context","prev","next","preventDefault","target","elements","value","fetch","concat","sent","json","Sunrise","sys","setState","main","temp","weather","sunRiseDate","sunSetDate","stop","_x","apply","arguments","arg1","Date","getHours","getMinutes","getSeconds","arg2","b","Titile","components_Form","components_Weather","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oRAYeA,0LARP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,WAAW,MAAMC,cAAc,SAASC,QAAQ,iBACzDN,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAACI,MAAM,UAAlB,eACAP,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAACI,MAAM,UAAlB,mDALIC,IAAMC,6BCsBXC,6MArBXC,MAAM,WACFC,QAAQC,IAAI,SACZC,IAAE,SAASC,IAAI,6EAKf,OACIf,EAAAC,EAAAC,cAAA,OAAKc,UAAU,QACfhB,EAAAC,EAAAC,cAAA,QAAMe,SAAUC,KAAKC,MAAMC,WAAYJ,UAAU,cAC7ChB,EAAAC,EAAAC,cAAA,SAAOC,MAAO,CAACkB,WAAW,UAA1B,cACArB,EAAAC,EAAAC,cAAA,SAAOoB,KAAK,OAAOC,KAAK,OAAQpB,MAAO,CAACkB,WAAW,QAAQG,MAAM,OAAQR,UAAU,iBACnFhB,EAAAC,EAAAC,cAAA,SAAOC,MAAO,CAACkB,WAAW,UAA1B,iBACArB,EAAAC,EAAAC,cAAA,SAAOoB,KAAK,OAAOC,KAAK,UAAWpB,MAAO,CAACkB,WAAW,QAAQG,MAAM,OAAQR,UAAU,iBACtFhB,EAAAC,EAAAC,cAAA,UAAQc,UAAU,kBAAkBb,MAAO,CAACG,QAAQ,QAAQmB,OAAO,OAAOC,UAAU,QAApF,gBAEJ1B,EAAAC,EAAAC,cAAA,UAAQc,UAAU,kBAAkBb,MAAO,CAACG,QAAQ,QAAQmB,OAAO,QAASE,QAAST,KAAKP,OAA1F,iBAjBOH,IAAMC,WC+BVmB,cA9BX,SAAAA,EAAYT,GACZ,IAAAU,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAZ,KAAAU,GACIC,EAAAC,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAhB,KAAMC,IACNP,QAAQC,IAAIgB,EAAKV,MAAMgB,SAF3BN,qHAYI,OACI7B,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACuB,UAAU,OAAQU,OAAQlB,KAAKmB,QACxCnB,KAAKC,MAAMmB,MAAQpB,KAAKC,MAAMoB,SAAWvC,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAACqC,UAAU,WAAtB,aAA4CtB,KAAKC,MAAMmB,KAAvD,MAAgEpB,KAAKC,MAAMoB,SACpHrB,KAAKC,MAAMsB,aAAezC,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAACqC,UAAU,WAAtB,gBAA+CtB,KAAKC,MAAMsB,YAA1D,UAC1BvB,KAAKC,MAAMuB,aAAe1C,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAACqC,UAAU,WAAtB,gBAA+CtB,KAAKC,MAAMuB,YAA1D,KAC1BxB,KAAKC,MAAMwB,UAAY3C,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAACqC,UAAU,WAAtB,aAA4CtB,KAAKC,MAAMwB,SAAvD,MACvBzB,KAAKC,MAAMyB,MAAMC,KAAO7C,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAACqC,UAAU,WAAtB,cAA6CtB,KAAKC,MAAMyB,MAAMC,KACtF3B,KAAKC,MAAMyB,MAAME,KAAO9C,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAACqC,UAAU,WAAtB,cAA6CtB,KAAKC,MAAMyB,MAAME,KACtF5B,KAAKC,MAAMgB,SAAWnC,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAACqC,UAAU,WAAtB,YAA2CtB,KAAKC,MAAMgB,SAC5EjB,KAAKC,MAAM4B,QAAU/C,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAACqC,UAAU,WAAtB,WAA0CtB,KAAKC,MAAM4B,QAC1E7B,KAAKC,MAAM6B,UAAYhD,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAACqC,UAAU,WAAtB,aAA4CtB,KAAKC,MAAM6B,UAC9E9B,KAAKC,MAAM8B,YAAcjD,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAACqC,UAAU,WAAtB,eAA8CtB,KAAKC,MAAM8B,YAClF/B,KAAKC,MAAM+B,OAASlD,EAAAC,EAAAC,cAAA,MAAIC,MAAO,CAACqC,UAAU,WAAYtB,KAAKC,MAAM+B,MAA7C,aA1Bd1C,IAAMC,WCItB0C,SAAU,oCAwGDC,cArGf,SAAAA,EAAYjC,GACZ,IAAAU,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAZ,KAAAkC,IACEvB,EAAAC,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAsB,GAAAlB,KAAAhB,KAAMC,KAINkC,MAAM,CACJZ,iBAAaa,EACbhB,UAAMgB,EACNf,aAASe,EACTX,cAAUW,EACVZ,iBAAaY,EACbV,MAAM,CACJC,SAAIS,EACJR,SAAIQ,GAENnB,aAAQmB,EACRP,YAAOO,EACPN,cAASM,EACTL,gBAAWK,EACXJ,WAAOI,GAnBXzB,EAsBET,WAtBF,eAAAmC,EAAAzB,OAAA0B,EAAA,EAAA1B,CAAA2B,EAAAxD,EAAAyD,KAsBc,SAAAC,EAAMC,GAAN,IAAAtB,EAAAC,EAAAsB,EAAAC,EAAA,OAAAL,EAAAxD,EAAA8D,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACVN,EAAEO,iBACI7B,EAAOsB,EAAEQ,OAAOC,SAAS/B,KAAKgC,MACpC1D,QAAQC,IAAIyB,GACNC,EAAUqB,EAAEQ,OAAOC,SAAS9B,QAAQ+B,MAC1C1D,QAAQC,IAAI0B,GALFyB,EAAAE,KAAA,EAMaK,MAAK,oDAAAC,OAAqDlC,EAArD,KAAAkC,OAA6DjC,EAA7D,WAAAiC,OAA8ErB,EAA9E,kBANlB,cAMJU,EANIG,EAAAS,KAAAT,EAAAE,KAAA,GAOSL,EAASa,OAPlB,QAOJZ,EAPIE,EAAAS,KAQV7D,QAAQC,IAAIiD,GACZjC,EAAK8C,QAAQb,EAAKc,IAAIzC,SACtBN,EAAKQ,OAAOyB,EAAKc,IAAI7B,QAClBT,GAAQC,EAEXV,EAAKgD,SAAS,CACZpC,YAAaqB,EAAKgB,KAAKC,KACvBzC,KAAMwB,EAAKvC,KACXgB,QAASuB,EAAKc,IAAIrC,QAClBI,SAAUmB,EAAKgB,KAAKnC,SACpBD,YAAaoB,EAAKkB,QAAQ,GAAGtC,YAC7BE,MAAM,CACJC,IAAIiB,EAAKlB,MAAMC,IACfC,IAAIgB,EAAKlB,MAAME,KAEjBX,QAAQN,EAAKoD,YACblC,OAAOlB,EAAKqD,WACZlC,SAAUc,EAAKgB,KAAK9B,SACpBC,WAAWa,EAAKb,WAChBC,MAAO,KAIPrB,EAAKgD,SAAS,CAAC3B,MAAM,kCA/Bb,yBAAAc,EAAAmB,SAAAxB,MAtBd,gBAAAyB,GAAA,OAAA7B,EAAA8B,MAAAnE,KAAAoE,YAAA,GAAAzD,EAyDE8C,QAAU,SAACY,GACT3E,QAAQC,IAAI0E,GACZ,IAAItF,EAAE,IAAIuF,KAAU,IAALD,GACf3E,QAAQC,IAAIZ,GACZ4B,EAAKoD,YAAYhF,EAAEwF,WAAW,IAAIxF,EAAEyF,aAAa,IAAIzF,EAAE0F,aACvD/E,QAAQC,IAAIgB,EAAKoD,cA9DrBpD,EAgEEQ,OAAS,SAACuD,GACRhF,QAAQC,IAAI+E,GACZ,IAAIC,EAAE,IAAIL,KAAU,IAALI,GACfhF,QAAQC,IAAIgF,GACZhE,EAAKqD,WAAWW,EAAEJ,WAAW,IAAII,EAAEH,aAAa,IAAIG,EAAEF,aACtD/E,QAAQC,IAAIgB,EAAKqD,aArErBrD,wEAwEI,OACE7B,EAAAC,EAAAC,cAAA,OAAKc,UAAU,aACbhB,EAAAC,EAAAC,cAAA,OAAKc,UAAU,OACbhB,EAAAC,EAAAC,cAAA,OAAKc,UAAU,qCACbhB,EAAAC,EAAAC,cAAC4F,EAAD,OAEF9F,EAAAC,EAAAC,cAAA,OAAKc,UAAU,4CACfhB,EAAAC,EAAAC,cAAC6F,EAAD,CAAM3E,WAAYF,KAAKE,aACvBpB,EAAAC,EAAAC,cAAC8F,EAAD,CACAvD,YAAavB,KAAKmC,MAAMZ,YACxBH,KAAMpB,KAAKmC,MAAMf,KACjBC,QAASrB,KAAKmC,MAAMd,QACpBI,SAAUzB,KAAKmC,MAAMV,SACrBD,YAAaxB,KAAKmC,MAAMX,YACxBE,MAAO1B,KAAKmC,MAAMT,MAClBT,QAASjB,KAAKmC,MAAMlB,QACpBY,OAAQ7B,KAAKmC,MAAMN,OACnBE,WAAY/B,KAAKmC,MAAMJ,WACvBD,SAAU9B,KAAKmC,MAAML,SACrBE,MAAOhC,KAAKmC,MAAMH,kBA7FV1C,IAAMC,WCIJwF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOvG,EAAAC,EAAAC,cAACsG,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.8e21fe8e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Title extends React.Component{\r\n    render(){\r\n        return(\r\n            <div style={{lineHeight:\"2em\",verticalAlign:\"middle\",display:\"inline-block\"}}>  \r\n                <h3 style={{color:\"white\"}}>Weather App</h3>\r\n                <h6 style={{color:\"white\"}}>Know the weather conditions of anywhere</h6>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Title;","import React from 'react';\r\nimport $ from 'jquery'; \r\nclass Form extends React.Component{\r\n    clear=()=>{\r\n        console.log(\"clear\");\r\n        $(\"input\").val('');\r\n    } \r\n\r\n    render(){\r\n       \r\n        return(\r\n            <div className=\"card\">\r\n            <form onSubmit={this.props.getWeather} className=\"form-group\">\r\n                <label style={{marginLeft:\"0.5em\"}}>Enter City</label>\r\n                <input type=\"text\" name=\"city\"  style={{marginLeft:\"0.5em\",width:\"95%\"}} className=\"form-control\"/>  \r\n                <label style={{marginLeft:\"0.5em\"}}>Enter Country</label>\r\n                <input type=\"text\" name=\"country\"  style={{marginLeft:\"0.5em\",width:\"95%\"}} className=\"form-control\"/>\r\n                <button className=\"btn btn-primary\" style={{display:\"block\",margin:\"auto\",marginTop:\"1em\"}}>Get Weather</button>\r\n            </form>\r\n            <button className=\"btn btn-primary\" style={{display:\"block\",margin:\"auto\"}} onClick={this.clear}>Clear</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Form;","import React from 'react';\r\n\r\nclass Weather extends React.Component{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        console.log(this.props.sunrise);\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n      \r\n    }\r\n   \r\n    \r\n    render(){\r\n        return(\r\n            <div style={{marginTop:\"4em\"}} onLoad={this.Sunset}>\r\n               {this.props.city && this.props.country && <h6 style={{textAlign:\"center\"}}>Location: {this.props.city} , {this.props.country}</h6>}\r\n               {this.props.temperature && <h6 style={{textAlign:\"center\"}}>Temperature: {this.props.temperature} Â°C</h6>}         \r\n               {this.props.description && <h6 style={{textAlign:\"center\"}}>Description: {this.props.description} </h6>}\r\n               {this.props.humidity && <h6 style={{textAlign:\"center\"}}>Humidity: {this.props.humidity} %</h6>}\r\n               {this.props.coord.lat && <h6 style={{textAlign:\"center\"}}>Langitude: {this.props.coord.lat}</h6>}\r\n               {this.props.coord.lon && <h6 style={{textAlign:\"center\"}}>Longitude: {this.props.coord.lon}</h6>}\r\n               {this.props.sunrise && <h6 style={{textAlign:\"center\"}}>Sunrise: {this.props.sunrise}</h6>}\r\n               {this.props.sunset && <h6 style={{textAlign:\"center\"}}>Sunset: {this.props.sunset}</h6>}\r\n               {this.props.pressure && <h6 style={{textAlign:\"center\"}}>Pressure: {this.props.pressure}</h6>}\r\n               {this.props.visibility && <h6 style={{textAlign:\"center\"}}>Visibility: {this.props.visibility}</h6>}\r\n               {this.props.error && <h6 style={{textAlign:\"center\"}}>{this.props.error} </h6>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Weather;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Title from './components/Titile';\nimport Form from './components/Form';\nimport Weather from './components/Weather';\nimport './App.css'\nconst API_KEY = \"6fd18a7cc8141907cdbfea3b6b442f34\";\n\nclass App extends React.Component{\nconstructor(props)\n{\n  super(props);\n  // let sunRiseDate;\n  // let sunSetDate;\n}\n  state={\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    humidity: undefined,\n    description: undefined,\n    coord:{\n      lat:undefined,\n      lon:undefined\n    },\n    sunrise:undefined,\n    sunset:undefined,\n    pressure:undefined,\n    visibility:undefined,\n    error: undefined  \n  }\n\n  getWeather= async(e) =>{\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    console.log(city);\n    const country = e.target.elements.country.value;\n    console.log(country);\n    const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n    const data = await api_call.json();\n    console.log(data);\n    this.Sunrise(data.sys.sunrise);\n    this.Sunset(data.sys.sunset);\n    if(city && country)\n    {\n    this.setState({\n      temperature: data.main.temp,\n      city: data.name,\n      country: data.sys.country,\n      humidity: data.main.humidity,\n      description: data.weather[0].description,\n      coord:{\n        lat:data.coord.lat,\n        lon:data.coord.lon\n      },\n      sunrise:this.sunRiseDate,\n      sunset:this.sunSetDate,\n      pressure: data.main.pressure,\n      visibility:data.visibility,\n      error: \"\"\n    })\n    }else\n    {\n      this.setState({error:\"Please enter city and country\"})\n    }\n  }\n\n  Sunrise = (arg1) => {\n    console.log(arg1)\n    let a=new Date(arg1*1000);\n    console.log(a);\n    this.sunRiseDate=a.getHours()+\":\"+a.getMinutes()+\":\"+a.getSeconds();\n    console.log(this.sunRiseDate);  \n  }\n  Sunset = (arg2) => {\n    console.log(arg2)\n    let b=new Date(arg2*1000);\n    console.log(b);\n    this.sunSetDate=b.getHours()+\":\"+b.getMinutes()+\":\"+b.getSeconds();\n    console.log(this.sunSetDate);\n  }\n  render(){\n    return(\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-lg-4 col-md-4 col-sm-4 colOne\"  >  \n            <Title/> \n          </div>\n          <div className=\"col-lg-8 col-md-8 col-sm-8 col-12 colTwo\" >\n          <Form getWeather={this.getWeather}/>\n          <Weather\n          temperature={this.state.temperature}\n          city={this.state.city}\n          country={this.state.country}\n          humidity={this.state.humidity}\n          description={this.state.description}\n          coord={this.state.coord}\n          sunrise={this.state.sunrise}\n          sunset={this.state.sunset}\n          visibility={this.state.visibility}\n          pressure={this.state.pressure}\n          error={this.state.error}\n          />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}